---
swagger: "2.0"
info:
  description: "Paredros API for Database"
  version: "0.0.1"
  title: "Paredros API"
host: "it-projekt19-6.informatik.fh-nuernberg.de:8081"
basePath: "/api"
tags:
- name: "adventure"
  description: "Acces to the Paredros database"
- name: "auth"
  description: "Handels authorisation and athenification"
schemes:
- "http"
paths:
  /adventures:
    post:
      tags:
      - "adventure"
      summary: "Creates a Adventure"
      description: "Adds a Adventure to the list."
      operationId: "adventuresPOST"
      parameters:
      - name: token
        in: header
        required: true
        type: string
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "object"
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "Adventure"
    delete:
      tags:
      - "adventure"
      summary: "Delets all Adenvtures"
      description: "Delets all user relatet Adventure from the List."
      operationId: "adventuresDELETE"
      parameters: 
      - name: token
        in: header
        required: true
        type: string
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "Adventure"
  /adventures/userAdventures:
    get:
      tags:
      - "adventure"
      summary: "Gets all Adventures from a specificUser"
      description: "Gets all user relatet Adventures from the list."
      operationId: "adventuresGET"
      parameters: 
        - name: token
          in: header
          required: true
          type: string
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "Adventure"
  /adventures/{adventureId}:
    get:
      tags:
      - "adventure"
      summary: "Gets adventure by id"
      description: "Gets adventure from list by id"
      operationId: "adventuresAdventureIdGET"
      parameters:
      - name: token
        in: header
        required: true
        type: string
      - name: "adventureId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "Adventure"
    delete:
      tags:
      - "adventure"
      summary: "Delets adventure"
      description: "Delets adventure by id"
      operationId: "adventuresAdventureIdDELETE"
      parameters:
      - name: token
        in: header
        required: true
        type: string
      - name: "adventureId"
        in: "path"
        required: true
        type: string
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "Adventure"
    patch:
      tags:
      - "adventure"
      summary: "Updates adventure"
      description: "Updates adventure by id"
      operationId: "adventuresAdventureIdPATCH"
      parameters:
      - name: token
        in: header
        required: true
        type: string
      - name: "adventureId"
        in: "path"
        required: true
        type: string
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "object"
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "Adventure"
  /auth/login:
    post:
      tags:
      - "auth"
      summary: "login user"
      description: "Username and password need to be send in trade of a JWT"
      operationId: "authLoginPOST"
      parameters: 
        - name: email
          in: header
          required: true
          type: string
        - name: hashedpassword
          in: header
          required: true
          type: string
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "Auth"
  /auth/register:
    post:
      tags:
      - "auth"
      summary: "register user"
      description: "register user in paredros"
      operationId: "authRegisterPOST"
      parameters: 
        - name: username
          in: header
          required: true
          type: string
        - name: hashedpassword
          in: header
          required: true
          type: string
        - name: email
          in: header
          required: true
          type: string
        - name: salt
          in: header
          required: true
          type: string
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "Auth"
  /auth/salt:
    get:
      tags:
      - "auth"
      summary: "get user specific salt"
      description: "get salt for hashing userpassword"
      operationId: "authSaltGET"
      parameters:
        - name: email
          in: header
          required: true
          type: string
      responses:
        "200":
          description: "OK"
      x-swagger-router-controller: "Auth"
definitions: {}
